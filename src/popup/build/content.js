/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/background/content.ts":
/*!***********************************!*\
  !*** ./src/background/content.ts ***!
  \***********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
var chrome_1 = __webpack_require__(/*! @polkadot/extension-inject/chrome */ "./node_modules/@polkadot/extension-inject/chrome.cjs");
var port = chrome_1.chrome.runtime.connect({ name: "knockKnock" });
// handles from background to page
port.onMessage.addListener(function (data) {
    // if (data.message === "GET_ACCOUNTS") {
    window.postMessage(__assign(__assign({}, data), { origin: "MESSAGE_ORIGIN_CONTENT", from: "window-postMessage" }), "*");
    // }
});
// handles from page to background
window.addEventListener("message", function (_a) {
    var data = _a.data, source = _a.source;
    if (source !== window || data.origin !== "MESSAGE_ORIGIN_PAGE") {
        return;
    }
    port.postMessage(__assign(__assign({}, data), { origin: "MESSAGE_ORIGIN_CONTENT" }));
    // if (data.message === "GET_ACCOUNTS") {
    // }
});
if ((_a = chrome_1.chrome === null || chrome_1.chrome === void 0 ? void 0 : chrome_1.chrome.extension) === null || _a === void 0 ? void 0 : _a.getURL) {
    var script_1 = document.createElement("script");
    script_1.src = chrome_1.chrome.extension.getURL("page.js");
    script_1.onload = function () {
        if (script_1.parentNode) {
            script_1.parentNode.removeChild(script_1);
        }
    };
    (document.head || document.documentElement).appendChild(script_1);
}


/***/ }),

/***/ "./node_modules/@polkadot/extension-inject/chrome.cjs":
/*!************************************************************!*\
  !*** ./node_modules/@polkadot/extension-inject/chrome.cjs ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.chrome = void 0;

var _xGlobal = __webpack_require__(/*! @polkadot/x-global */ "./node_modules/@polkadot/x-global/index.cjs");

// Copyright 2019-2022 @polkadot/extension-inject authors & contributors
// SPDX-License-Identifier: Apache-2.0
const chrome = (0, _xGlobal.extractGlobal)('chrome', _xGlobal.xglobal.browser);
exports.chrome = chrome;

/***/ }),

/***/ "./node_modules/@polkadot/x-global/index.cjs":
/*!***************************************************!*\
  !*** ./node_modules/@polkadot/x-global/index.cjs ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.exposeGlobal = exposeGlobal;
exports.extractGlobal = extractGlobal;
Object.defineProperty(exports, "packageInfo", ({
  enumerable: true,
  get: function () {
    return _packageInfo.packageInfo;
  }
}));
exports.xglobal = void 0;

var _packageInfo = __webpack_require__(/*! ./packageInfo.cjs */ "./node_modules/@polkadot/x-global/packageInfo.cjs");

// Copyright 2017-2022 @polkadot/x-global authors & contributors
// SPDX-License-Identifier: Apache-2.0
function evaluateThis(fn) {
  return fn('return this');
}

const xglobal = typeof globalThis !== 'undefined' ? globalThis : typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : evaluateThis(Function);
exports.xglobal = xglobal;

function extractGlobal(name, fallback) {
  return typeof xglobal[name] === 'undefined' ? fallback : xglobal[name];
}

function exposeGlobal(name, fallback) {
  if (typeof xglobal[name] === 'undefined') {
    xglobal[name] = fallback;
  }
}

/***/ }),

/***/ "./node_modules/@polkadot/x-global/packageInfo.cjs":
/*!*********************************************************!*\
  !*** ./node_modules/@polkadot/x-global/packageInfo.cjs ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

var __dirname = "/";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.packageInfo = void 0;
// Copyright 2017-2022 @polkadot/x-global authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
const packageInfo = {
  name: '@polkadot/x-global',
  path:  true ? __dirname : 0,
  type: 'cjs',
  version: '8.7.1'
};
exports.packageInfo = packageInfo;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/background/content.ts");
/******/ 	
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,